{"ast":null,"code":"var _jsxFileName = \"D:\\\\8 Github\\\\baler\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react'; //Bootstrap\n\nimport './bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button'; //Components\n\nimport LogButton from './components/logButton';\nimport MinterSpace from './components/minterSpace';\nimport CharacterSheet from './components/characterSheet';\nimport UserData from './components/userData'; //Helpers\n// Extras\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Moralis = require('moralis');\n\nconst Web3 = require('web3');\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null); //Data on dApp\n\n  const [userData, setUserData] = useState(null);\n  const [gallery, setGallery] = useState(null);\n  const [likes, setLikes] = useState(null);\n  const [editMode, setEditMode] = useState(false); // Replace this upon deployment:\n\n  const [contractAddress] = useState(\"0xf271dF427d16D3f7910A8b2311E7c2f4702aF8C4\"); //DApp handlers\n\n  const [nftSelected, setNftSelected] = useState(null);\n  const [likesOpen, setLikesOpen] = useState(true);\n  const [userList, setUserList] = useState(true);\n  const [galleryOwner, setGalleryOwner] = useState(null); // Moralis confs.\n  // Replace these per server:\n\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'; //Moralis functions\n\n  const currentUser = Moralis.User.current();\n\n  if (currentUser) {\n    if (!user) {\n      setUser(currentUser);\n      fetchUserData(currentUser);\n      getGallery(currentUser.attributes.ethAddress);\n      getLikes(currentUser);\n      connectContract();\n    }\n  } else {\n    console.log('should explain protocol and ask for login');\n  }\n\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\n    alert('Account changed!');\n    setUserData(null);\n  });\n\n  async function login() {\n    let userAuth;\n\n    try {\n      userAuth = await Moralis.Web3.authenticate();\n      setUser(userAuth);\n      fetchUserData(userAuth);\n      alert(\"User logged in\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function logout() {\n    console.log('Login out');\n    Moralis.User.logOut().then(() => {\n      const currentUser = Moralis.User.current(); // this will now be null\n\n      setUser(currentUser);\n      setUserData(null);\n      setGallery(null);\n      setLikes(null);\n    });\n  }\n\n  function getProfileForAddress(address) {\n    return address ? Moralis.Cloud.run(\"getProfileForAddress\", {\n      address\n    }) : null;\n  }\n\n  function getNameForAddress(address) {\n    return address ? Moralis.Cloud.run(\"getNameForAddress\", {\n      address\n    }) : null;\n  } //Backend queries\n\n\n  async function fetchUserData(currentUser) {\n    let usernameRetrieve = await currentUser.get('username');\n    let emailRetrieve = await currentUser.get('email');\n    let ethAddress = await currentUser.get('ethAddress');\n    await setUserData({\n      username: usernameRetrieve,\n      email: emailRetrieve,\n      address: ethAddress\n    });\n  }\n\n  async function getGallery(address) {\n    // get user profile\n    const targetAddress = address;\n    console.log('address targeted: ', targetAddress);\n    const username = await getNameForAddress(targetAddress);\n    const profile = await getProfileForAddress(targetAddress);\n    console.log('Profile: ', profile);\n\n    if (profile.pics.length > 0) {\n      setGalleryOwner(username.username);\n      setGallery(profile.pics);\n    } else {\n      alert(\"No pics from: \" + username.username);\n    }\n  }\n\n  async function getLikes(user) {\n    let query = new Moralis.Query(\"UserImage\");\n    const relation = user.relation('likes');\n    let results = await relation.query().find();\n    const pics = results.map(function (r) {\n      return {\n        url: r.attributes.img.url(),\n        name: r.attributes.img.name()\n      };\n    }); // console.log('likes is ',results)\n\n    setLikes(pics);\n  }\n\n  async function fetchUserList() {\n    if (userList) {\n      setUserList(null);\n    } else {\n      const userAddresses = await Moralis.Cloud.run(\"getUserList\", {}); // console.log('other users:',userAddresses);\n\n      setUserList(userAddresses);\n    }\n  } // Backend aggregators\n\n\n  async function setUserDataBackend() {\n    //validate inputs!\n    const newUsername = document.getElementById('username').value;\n    const newEmail = document.getElementById('email').value;\n    let saveRequired = false;\n\n    if (newUsername !== userData.username && newUsername !== '') {\n      user.set(\"username\", newUsername);\n      saveRequired = true;\n      alert(\"Username changed to: \" + newUsername);\n    } else {\n      alert(\"Username has not changed\");\n    }\n\n    if (newEmail !== userData.email && newEmail !== '') {\n      user.set(\"email\", newEmail);\n      saveRequired = true;\n      alert(\"Email changed to: \" + newEmail);\n    } else {\n      alert(\"Email has not changed\");\n    }\n\n    if (saveRequired) {\n      user.save();\n      fetchUserData(user);\n    }\n  } //App handler functions\n  // Chain connections\n\n\n  async function connectContract() {\n    window.web3 = await Moralis.Web3.enable();\n    window.contractInstance = new Web3('HTTP://127.0.0.1:7545');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        height: '70px',\n        padding: '5px 0'\n      },\n      className: \"justify-content-end\",\n      children: [userData && userData.address ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '5px'\n        },\n        children: [userData.address.slice(0, 7), \"..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(LogButton, {\n        userData: userData,\n        login: login,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          marginRight: '5px'\n        },\n        children: [userData.username, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setEditMode(true);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this) : null, user && !userData ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setEditMode(true);\n        },\n        children: \"Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(UserData, {\n          userData: userData,\n          setUserDataBackend: setUserDataBackend,\n          setEditMode: setEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex justify-content-center border\",\n      style: {\n        background: 'lightblue'\n      },\n      onClick: () => {\n        setNftSelected(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint new NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex border\",\n      children: nftSelected ? /*#__PURE__*/_jsxDEV(CharacterSheet, {\n        user: user,\n        nftSelected: nftSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(MinterSpace, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'lightgreen'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [galleryOwner, \" Collection \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), gallery ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginLeft: '5px'\n        },\n        children: [\"> \", gallery.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: gallery ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container center\",\n        id: \"gallery\",\n        children: gallery.map(function (d) {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => {\n              setNftSelected(d);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: d.url,\n              alt: d.name,\n              height: \"200\",\n              width: \"200\",\n              margin: \"5px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"You have no NFTs minted! Do your first!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'grey'\n      },\n      onClick: () => {\n        setLikesOpen(!likesOpen);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: likes && likesOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: likes && likes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"center\",\n          children: \"You have to like something..!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container center\",\n          id: \"gallery\",\n          children: likes.map(function (d) {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => {\n                setNftSelected(d);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: d.url,\n                alt: d.name,\n                height: \"200\",\n                width: \"200\",\n                margin: \"5px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 12\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'coral'\n      },\n      onClick: fetchUserList,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Other users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: userList && userList.length > 0 ? userList.map(ad => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => {\n                getGallery(ad);\n              },\n              children: [ad.slice(0, 6), \"..\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 18\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nKOBmWQPaWjJld2iKlX2TueFeFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/8 Github/baler/src/App.js"],"names":["React","useState","Container","Row","Button","LogButton","MinterSpace","CharacterSheet","UserData","Moralis","require","Web3","App","user","setUser","userData","setUserData","gallery","setGallery","likes","setLikes","editMode","setEditMode","contractAddress","nftSelected","setNftSelected","likesOpen","setLikesOpen","userList","setUserList","galleryOwner","setGalleryOwner","initialize","serverURL","currentUser","User","current","fetchUserData","getGallery","attributes","ethAddress","getLikes","connectContract","console","log","onAccountsChanged","accounts","alert","login","userAuth","authenticate","error","logout","logOut","then","getProfileForAddress","address","Cloud","run","getNameForAddress","usernameRetrieve","get","emailRetrieve","username","email","targetAddress","profile","pics","length","query","Query","relation","results","find","map","r","url","img","name","fetchUserList","userAddresses","setUserDataBackend","newUsername","document","getElementById","value","newEmail","saveRequired","set","save","window","web3","enable","contractInstance","height","padding","marginRight","slice","marginLeft","background","d","ad"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useState} from 'react';\r\n//Bootstrap\r\nimport './bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n//Components\r\nimport LogButton from './components/logButton';\r\nimport MinterSpace from './components/minterSpace';\r\nimport CharacterSheet from './components/characterSheet';\r\nimport UserData from './components/userData';\r\n//Helpers\r\n\r\n// Extras\r\nconst Moralis = require('moralis');\r\nconst Web3 = require('web3');\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  //Data on dApp\r\n  const [userData, setUserData] = useState(null);\r\n  const [gallery, setGallery] = useState(null);\r\n  const [likes, setLikes] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  // Replace this upon deployment:\r\n  const [contractAddress]= useState(\"0xf271dF427d16D3f7910A8b2311E7c2f4702aF8C4\");\r\n  //DApp handlers\r\n  const [nftSelected, setNftSelected] = useState(null);\r\n  const [likesOpen, setLikesOpen] = useState(true);\r\n  const [userList, setUserList] = useState(true);\r\n  const [galleryOwner, setGalleryOwner] = useState(null);\r\n\r\n  // Moralis confs.\r\n  // Replace these per server:\r\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\r\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'\r\n\r\n\r\n  //Moralis functions\r\n  const currentUser = Moralis.User.current();\r\n  if (currentUser) {\r\n    if(!user){\r\n      setUser(currentUser);\r\n      fetchUserData(currentUser);\r\n      getGallery(currentUser.attributes.ethAddress);\r\n      getLikes(currentUser);\r\n      connectContract();\r\n\r\n    }\r\n  } else {\r\n    console.log('should explain protocol and ask for login');\r\n  }\r\n\r\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\r\n    alert('Account changed!')\r\n    setUserData(null);\r\n  });\r\n\r\n  async function login() {\r\n    let userAuth;\r\n    try {\r\n        userAuth = await Moralis.Web3.authenticate();\r\n        setUser(userAuth);\r\n        fetchUserData(userAuth);\r\n        alert(\"User logged in\")\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n  async function logout(){\r\n      console.log('Login out');\r\n      Moralis.User.logOut().then(() => {\r\n        const currentUser = Moralis.User.current();  // this will now be null\r\n        setUser(currentUser);\r\n        setUserData(null);\r\n        setGallery(null);\r\n        setLikes(null);\r\n      });\r\n    }\r\n\r\n  function getProfileForAddress(address) {\r\n      return address\r\n        ? Moralis.Cloud.run(\"getProfileForAddress\", { address })\r\n        : null;\r\n    }\r\n  function getNameForAddress(address) {\r\n        return address\r\n          ? Moralis.Cloud.run(\"getNameForAddress\", { address })\r\n          : null;\r\n    }\r\n\r\n  //Backend queries\r\n  async function fetchUserData(currentUser){\r\n    let usernameRetrieve = await currentUser.get('username')\r\n    let emailRetrieve = await currentUser.get('email')\r\n    let ethAddress = await currentUser.get('ethAddress')\r\n    await setUserData({username:usernameRetrieve, email:emailRetrieve, address: ethAddress})\r\n  }\r\n\r\n\r\n  async function getGallery(address){\r\n      // get user profile\r\n      const targetAddress = address;\r\n      console.log('address targeted: ',targetAddress)\r\n      const username = await getNameForAddress(targetAddress);\r\n      const profile = await getProfileForAddress(targetAddress);\r\n      console.log('Profile: ',profile);\r\n      if (profile.pics.length > 0) {\r\n        setGalleryOwner(username.username)\r\n        setGallery(profile.pics)\r\n      } else {\r\n        alert(\"No pics from: \"+username.username);\r\n      }\r\n    }\r\n\r\n  async function getLikes(user){\r\n      let query = new Moralis.Query(\"UserImage\");\r\n      const relation = user.relation('likes')\r\n      let results = await relation.query().find();\r\n      const pics = results.map(function (r) {\r\n        return {\r\n          url: r.attributes.img.url(),\r\n          name: r.attributes.img.name(),\r\n        };\r\n      });\r\n      // console.log('likes is ',results)\r\n      setLikes(pics);\r\n      }\r\n\r\n  async function fetchUserList() {\r\n    if(userList){\r\n      setUserList(null);\r\n      }else{\r\n      const userAddresses = await Moralis.Cloud.run(\"getUserList\", {});\r\n        // console.log('other users:',userAddresses);\r\n      setUserList(userAddresses);}\r\n    }\r\n\r\n// Backend aggregators\r\nasync function setUserDataBackend(){\r\n  //validate inputs!\r\n  const newUsername = document.getElementById('username').value\r\n  const newEmail = document.getElementById('email').value\r\n  let saveRequired = false;\r\n  if(newUsername !== userData.username && newUsername !== ''){\r\n    user.set(\"username\",newUsername);\r\n    saveRequired=true;\r\n    alert(\"Username changed to: \"+newUsername)\r\n  }else{\r\n    alert(\"Username has not changed\")\r\n  }\r\n  if (newEmail !== userData.email && newEmail !== ''){\r\n    user.set(\"email\",newEmail);\r\n    saveRequired=true;\r\n    alert(\"Email changed to: \"+newEmail)\r\n  }else{\r\n    alert(\"Email has not changed\")\r\n  }\r\n  if(saveRequired){\r\n    user.save();\r\n    fetchUserData(user);\r\n  }\r\n}\r\n\r\n//App handler functions\r\n\r\n\r\n  // Chain connections\r\n  async function connectContract() {\r\n    window.web3 = await Moralis.Web3.enable();\r\n    window.contractInstance = new Web3('HTTP://127.0.0.1:7545');\r\n  }\r\n\r\n\r\n  return (\r\n    <Container fluid className=\"App\">\r\n      <Row style={{ height: '70px', padding: '5px 0', }} className=\"justify-content-end\">\r\n      {/*Login/Logout, address, name, edit user data*/}\r\n        { userData && userData.address?\r\n          <div style={{marginRight: '5px'}}>\r\n              {userData.address.slice(0,7)}..\r\n          </div>\r\n        :null}\r\n        <LogButton\r\n          userData={userData}\r\n          login={login}\r\n          logout={logout}\r\n          />\r\n        { userData?\r\n            <div style={{marginLeft: '5px',marginRight: '5px'}}>\r\n                {userData.username}\r\n                <Button onClick={()=>{setEditMode(true)}}>Edit</Button>\r\n            </div>\r\n          :null}\r\n{/* this will be prompt for new users,(form) to create username, email, etc */}\r\n        {user && !userData?\r\n          <Button onClick={()=>{setEditMode(true)}}>Set</Button>\r\n        :null}\r\n      </Row>\r\n      <Row className='justify-content-center'>\r\n        {editMode?\r\n          <div className='center'>\r\n          <UserData\r\n            userData={userData}\r\n            setUserDataBackend = {setUserDataBackend}\r\n            setEditMode={setEditMode}\r\n          />\r\n          </div>\r\n        :\r\n        null}\r\n      </Row>\r\n      <Row\r\n        className=\"flex justify-content-center border\"\r\n        style={{background: 'lightblue',}}\r\n        onClick={()=>{setNftSelected(null)}}\r\n              >\r\n            {/*title minter*/}\r\n                <h2>Mint new NFT</h2>\r\n      </Row>\r\n      <Row className='flex border'>\r\n                {/*image handler */}\r\n          {nftSelected?\r\n                <CharacterSheet\r\n                  user={user}\r\n                  nftSelected={nftSelected}\r\n                />\r\n                :\r\n                <MinterSpace  user={user} />\r\n              }\r\n              {/*\"Minterspace\"*/}\r\n      </Row>\r\n      <Row className=' justify-content-center border' style={{background: 'lightgreen',}}>\r\n      {/*Collection list and character sheet handler */}\r\n        <h3>{galleryOwner} Collection </h3>\r\n        {gallery?<h3 style={{marginLeft:'5px'}}>> {gallery.length}</h3>:null}\r\n      </Row>\r\n      <Row>\r\n        { gallery?\r\n          <div className='container center' id='gallery'>\r\n            {gallery.map(function(d){\r\n              return(\r\n                <a onClick={()=>{setNftSelected(d)}}>\r\n                  <img src={d.url} alt={d.name} height=\"200\" width=\"200\" margin=\"5px\"></img>\r\n                </a>\r\n                )\r\n                })}\r\n          </div>\r\n          :\r\n          <p className='center'>You have no NFTs minted! Do your first!!</p>\r\n        }\r\n        </Row>\r\n        <Row\r\n          className=' justify-content-center border'\r\n          style={{background: 'grey',}}\r\n          onClick={()=>{setLikesOpen(!likesOpen)}}\r\n          >\r\n         {/*Likes list ..*/}\r\n         <h3 className='center'>Likes</h3>\r\n         </Row>\r\n         <Row>\r\n         { likes && likesOpen ?\r\n           <div>\r\n            {likes && likes.length === 0?\r\n\r\n               <p className='center'>You have to like something..!</p>\r\n               :\r\n             <div className='container center' id='gallery'>\r\n               {likes.map(function(d){\r\n                 return(\r\n                   <a onClick={()=>{setNftSelected(d)}}>\r\n                     <img src={d.url} alt={d.name} height=\"200\" width=\"200\" margin=\"5px\"></img>\r\n                   </a>\r\n                   )\r\n                   })}\r\n             </div>\r\n            }\r\n          </div>\r\n           :\r\n           null\r\n         }\r\n         </Row>\r\n         <Row\r\n           className=' justify-content-center border'\r\n           style={{background: 'coral',}}\r\n           onClick={fetchUserList}\r\n         >\r\n         {/*Users list */}\r\n         <h3 className='center'>Other users</h3>\r\n         </Row>\r\n         <Row>\r\n           <div className='center'>\r\n           {userList && userList.length>0?\r\n             userList.map((ad)=>{\r\n               return(\r\n                 <div>\r\n                 <a onClick={()=>{\r\n                   getGallery(ad);\r\n                 }}>\r\n                   {ad.slice(0,6)}..\r\n                 </a><br />\r\n                 </div>\r\n               )\r\n             })\r\n             :null}\r\n           </div>\r\n         </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}