{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context5;\n\n      _forEachInstanceProperty2(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      var _context6;\n\n      _forEachInstanceProperty2(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource =\r\n  | {\r\n      format: 'file',\r\n      file: Blob,\r\n      type: string,\r\n    }\r\n  | {\r\n      format: 'base64',\r\n      base64: string,\r\n      type: string,\r\n    }\r\n  | {\r\n      format: 'uri',\r\n      uri: string,\r\n      type: string,\r\n    };*/\n\n\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\r\n * A Parse.File is a local representation of a file that is saved to the Parse\r\n * cloud.\r\n *\r\n * @alias Parse.File\r\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\r\n   * @param name {String} The file's name. This will be prefixed by a unique\r\n   *     value once the file has finished saving. The file name must begin with\r\n   *     an alphanumeric character, and consist of alphanumeric characters,\r\n   *     periods, spaces, underscores, or dashes.\r\n   * @param data {Array} The data for the file, as either:\r\n   *     1. an Array of byte value Numbers, or\r\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\r\n   *     3. an Object like { uri: \"...\" } with a uri String.\r\n   *     4. a File object selected with a file upload control. (3) only works\r\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\r\n   *        For example:\r\n   * <pre>\r\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\r\n   * if (fileUploadControl.files.length > 0) {\r\n   *   var file = fileUploadControl.files[0];\r\n   *   var name = \"photo.jpg\";\r\n   *   var parseFile = new Parse.File(name, file);\r\n   *   parseFile.save().then(function() {\r\n   *     // The file has been saved to Parse.\r\n   *   }, function(error) {\r\n   *     // The file either could not be read, or could not be saved to Parse.\r\n   *   });\r\n   * }</pre>\r\n   * @param type {String} Optional Content-Type header to use for the file. If\r\n   *     this is omitted, the content type will be inferred from the name's\r\n   *     extension.\r\n   * @param metadata {Object} Optional key value pairs to be stored with file object\r\n   * @param tags {Object} Optional key value pairs to be stored with file object\r\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\r\n   * Return the data for the file, downloading it if not already present.\r\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\r\n   * Data is cleared if saved with File object selected with a file upload control\r\n   *\r\n   * @returns {Promise} Promise that is resolve with base64 data\r\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\r\n     * Gets the name of the file. Before save is called, this is the filename\r\n     * given by the user. After save is called, that name gets prefixed with a\r\n     * unique identifier.\r\n     *\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\r\n     * Gets the url of the file. It is only available after you save the file or\r\n     * after you get the file from a Parse.Object.\r\n     *\r\n     * @param {object} options An object to specify url options\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\r\n     * Gets the metadata of the file.\r\n     *\r\n     * @returns {object}\r\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\r\n     * Gets the tags of the file.\r\n     *\r\n     * @returns {object}\r\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\r\n     * Saves the file to the Parse cloud.\r\n     *\r\n     * @param {object} options\r\n     *  * Valid options are:<ul>\r\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\r\n     *     be used for this request.\r\n     *   <li>sessionToken: A valid session token, used for making a request on\r\n     *     behalf of a specific user.\r\n     *   <li>progress: In Browser only, callback for upload progress. For example:\r\n     * <pre>\r\n     * let parseFile = new Parse.File(name, file);\r\n     * parseFile.save({\r\n     *   progress: (progressValue, loaded, total, { type }) => {\r\n     *     if (type === \"upload\" && progressValue !== null) {\r\n     *       // Update the UI using progressValue\r\n     *     }\r\n     *   }\r\n     * });\r\n     * </pre>\r\n     * </ul>\r\n     * @returns {Promise} Promise that is resolved when the save finishes.\r\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\r\n     * Aborts the request if it has already been sent.\r\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\r\n     * Deletes the file from the Parse cloud.\r\n     * In Cloud Code and Node only with Master Key.\r\n     *\r\n     * @param {object} options\r\n     *  * Valid options are:<ul>\r\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\r\n     *     be used for this request.\r\n     * <pre>\r\n     * @returns {Promise} Promise that is resolved when the delete finishes.\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      var options\n      /*:: ?: FullOptions*/\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var destroyOptions = {\n        useMasterKey: true\n      };\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\r\n     * Sets metadata to be saved with file object. Overwrites existing metadata\r\n     *\r\n     * @param {object} metadata Key value pairs to be stored with file object\r\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context2;\n\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\r\n     * Sets metadata to be saved with file object. Adds to existing metadata.\r\n     *\r\n     * @param {string} key key to store the metadata\r\n     * @param {*} value metadata\r\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\r\n     * Sets tags to be saved with file object. Overwrites existing tags\r\n     *\r\n     * @param {object} tags Key value pairs to be stored with file object\r\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context3;\n\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\r\n     * Sets tags to be saved with file object. Adds to existing tags.\r\n     *\r\n     * @param {string} key key to store tags\r\n     * @param {*} value tag\r\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context4.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context4.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context4.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name\n  /*: string*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;","map":{"version":3,"sources":["D:/8 Github/baler/node_modules/moralis/lib/browser/ParseFile.js"],"names":["_interopRequireDefault","require","_Object$defineProperty","_Object$defineProperties","_Object$getOwnPropertyDescriptors","_forEachInstanceProperty2","_Object$getOwnPropertyDescriptor","_filterInstanceProperty","_Object$getOwnPropertySymbols","_Object$keys2","exports","value","default","_slicedToArray2","_promise","_keys","_forEach","_typeof2","_regenerator","_asyncToGenerator2","_slice","_indexOf","_isArray","_classCallCheck2","_createClass2","_defineProperty2","_CoreManager","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","_context5","Object","key","_context6","ParseError","XHR","XMLHttpRequest","dataUriRegexp","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","metadata","tags","specifiedType","_name","_metadata","_tags","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","commaIndex","matches","exec","_getData","mark","_callee","_this","options","controller","result","wrap","_context","prev","next","abrupt","_url","Error","requestTask","task","_requestTask","getFileController","download","sent","stop","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","_this3","FILE_DELETE_UNNAMED_ERROR","destroyOptions","useMasterKey","hasOwnProperty","deleteFile","__type","other","_this4","_context2","addMetadata","_this5","_context3","addTag","obj","bytes","chunks","Math","ceil","b1","b2","b3","has2","has3","join","DefaultController","_saveFile","_callee2","base64Data","_base64Data$split","_base64Data$split2","first","second","_context4","rej","reader","FileReader","onload","onerror","error","readAsDataURL","split","fileData","_ContentType","getRESTController","request","downloadAjax","reject","resolve","xhr","open","responseType","e","onreadystatechange","readyState","DONE","response","Uint8Array","getResponseHeader","send","headers","get","ajax","catch","handleError","_setXHR","_getXHR","setFileController","_default"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\r\n\r\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\r\n\r\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\r\n\r\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\r\n\r\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\r\n\r\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\r\n\r\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\r\n\r\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\r\n\r\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\r\n\r\n_Object$defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nexports.default = void 0;\r\n\r\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\r\n\r\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\r\n\r\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\r\n\r\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\r\n\r\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\r\n\r\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\r\n\r\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\r\n\r\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\r\n\r\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\r\n\r\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\r\n\r\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\r\n\r\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\r\n\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = _Object$keys2(object);\r\n\r\n  if (_Object$getOwnPropertySymbols) {\r\n    var symbols = _Object$getOwnPropertySymbols(object);\r\n\r\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\r\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\r\n    });\r\n    keys.push.apply(keys, symbols);\r\n  }\r\n\r\n  return keys;\r\n}\r\n\r\nfunction _objectSpread(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i] != null ? arguments[i] : {};\r\n\r\n    if (i % 2) {\r\n      var _context5;\r\n\r\n      _forEachInstanceProperty2(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\r\n        (0, _defineProperty2.default)(target, key, source[key]);\r\n      });\r\n    } else if (_Object$getOwnPropertyDescriptors) {\r\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\r\n    } else {\r\n      var _context6;\r\n\r\n      _forEachInstanceProperty2(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\r\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\r\n      });\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nvar ParseError = require('./ParseError').default;\r\n\r\nvar XHR = null;\r\n\r\nif (typeof XMLHttpRequest !== 'undefined') {\r\n  XHR = XMLHttpRequest;\r\n}\r\n\r\n/*:: type Base64 = { base64: string };*/\r\n\r\n/*:: type Uri = { uri: string };*/\r\n\r\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\r\n\r\n/*:: export type FileSource =\r\n  | {\r\n      format: 'file',\r\n      file: Blob,\r\n      type: string,\r\n    }\r\n  | {\r\n      format: 'base64',\r\n      base64: string,\r\n      type: string,\r\n    }\r\n  | {\r\n      format: 'uri',\r\n      uri: string,\r\n      type: string,\r\n    };*/\r\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\r\n\r\nfunction b64Digit(number\r\n/*: number*/\r\n)\r\n/*: string*/\r\n{\r\n  if (number < 26) {\r\n    return String.fromCharCode(65 + number);\r\n  }\r\n\r\n  if (number < 52) {\r\n    return String.fromCharCode(97 + (number - 26));\r\n  }\r\n\r\n  if (number < 62) {\r\n    return String.fromCharCode(48 + (number - 52));\r\n  }\r\n\r\n  if (number === 62) {\r\n    return '+';\r\n  }\r\n\r\n  if (number === 63) {\r\n    return '/';\r\n  }\r\n\r\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\r\n}\r\n/**\r\n * A Parse.File is a local representation of a file that is saved to the Parse\r\n * cloud.\r\n *\r\n * @alias Parse.File\r\n */\r\n\r\n\r\nvar ParseFile = /*#__PURE__*/function () {\r\n  /**\r\n   * @param name {String} The file's name. This will be prefixed by a unique\r\n   *     value once the file has finished saving. The file name must begin with\r\n   *     an alphanumeric character, and consist of alphanumeric characters,\r\n   *     periods, spaces, underscores, or dashes.\r\n   * @param data {Array} The data for the file, as either:\r\n   *     1. an Array of byte value Numbers, or\r\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\r\n   *     3. an Object like { uri: \"...\" } with a uri String.\r\n   *     4. a File object selected with a file upload control. (3) only works\r\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\r\n   *        For example:\r\n   * <pre>\r\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\r\n   * if (fileUploadControl.files.length > 0) {\r\n   *   var file = fileUploadControl.files[0];\r\n   *   var name = \"photo.jpg\";\r\n   *   var parseFile = new Parse.File(name, file);\r\n   *   parseFile.save().then(function() {\r\n   *     // The file has been saved to Parse.\r\n   *   }, function(error) {\r\n   *     // The file either could not be read, or could not be saved to Parse.\r\n   *   });\r\n   * }</pre>\r\n   * @param type {String} Optional Content-Type header to use for the file. If\r\n   *     this is omitted, the content type will be inferred from the name's\r\n   *     extension.\r\n   * @param metadata {Object} Optional key value pairs to be stored with file object\r\n   * @param tags {Object} Optional key value pairs to be stored with file object\r\n   */\r\n  function ParseFile(name\r\n  /*: string*/\r\n  , data\r\n  /*:: ?: FileData*/\r\n  , type\r\n  /*:: ?: string*/\r\n  , metadata\r\n  /*:: ?: Object*/\r\n  , tags\r\n  /*:: ?: Object*/\r\n  ) {\r\n    (0, _classCallCheck2.default)(this, ParseFile);\r\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\r\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\r\n    var specifiedType = type || '';\r\n    this._name = name;\r\n    this._metadata = metadata || {};\r\n    this._tags = tags || {};\r\n\r\n    if (data !== undefined) {\r\n      if ((0, _isArray.default)(data)) {\r\n        this._data = ParseFile.encodeBase64(data);\r\n        this._source = {\r\n          format: 'base64',\r\n          base64: this._data,\r\n          type: specifiedType\r\n        };\r\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\r\n        this._source = {\r\n          format: 'file',\r\n          file: data,\r\n          type: specifiedType\r\n        };\r\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\r\n        this._source = {\r\n          format: 'uri',\r\n          uri: data.uri,\r\n          type: specifiedType\r\n        };\r\n      } else if (data && typeof data.base64 === 'string') {\r\n        var base64 = data.base64;\r\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\r\n\r\n        if (commaIndex !== -1) {\r\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\r\n\r\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\r\n          this._source = {\r\n            format: 'base64',\r\n            base64: this._data,\r\n            type: matches[1]\r\n          };\r\n        } else {\r\n          this._data = base64;\r\n          this._source = {\r\n            format: 'base64',\r\n            base64: base64,\r\n            type: specifiedType\r\n          };\r\n        }\r\n      } else {\r\n        throw new TypeError('Cannot create a Parse.File with that data.');\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Return the data for the file, downloading it if not already present.\r\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\r\n   * Data is cleared if saved with File object selected with a file upload control\r\n   *\r\n   * @returns {Promise} Promise that is resolve with base64 data\r\n   */\r\n\r\n\r\n  (0, _createClass2.default)(ParseFile, [{\r\n    key: \"getData\",\r\n    value: function () {\r\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\r\n        var _this = this;\r\n\r\n        var options, controller, result;\r\n        return _regenerator.default.wrap(function (_context) {\r\n          while (1) {\r\n            switch (_context.prev = _context.next) {\r\n              case 0:\r\n                if (!this._data) {\r\n                  _context.next = 2;\r\n                  break;\r\n                }\r\n\r\n                return _context.abrupt(\"return\", this._data);\r\n\r\n              case 2:\r\n                if (this._url) {\r\n                  _context.next = 4;\r\n                  break;\r\n                }\r\n\r\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\r\n\r\n              case 4:\r\n                options = {\r\n                  requestTask: function (task) {\r\n                    return _this._requestTask = task;\r\n                  }\r\n                };\r\n                controller = _CoreManager.default.getFileController();\r\n                _context.next = 8;\r\n                return controller.download(this._url, options);\r\n\r\n              case 8:\r\n                result = _context.sent;\r\n                this._data = result.base64;\r\n                return _context.abrupt(\"return\", this._data);\r\n\r\n              case 11:\r\n              case \"end\":\r\n                return _context.stop();\r\n            }\r\n          }\r\n        }, _callee, this);\r\n      }));\r\n\r\n      return function () {\r\n        return _getData.apply(this, arguments);\r\n      };\r\n    }()\r\n    /**\r\n     * Gets the name of the file. Before save is called, this is the filename\r\n     * given by the user. After save is called, that name gets prefixed with a\r\n     * unique identifier.\r\n     *\r\n     * @returns {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"name\",\r\n    value: function ()\r\n    /*: string*/\r\n    {\r\n      return this._name;\r\n    }\r\n    /**\r\n     * Gets the url of the file. It is only available after you save the file or\r\n     * after you get the file from a Parse.Object.\r\n     *\r\n     * @param {object} options An object to specify url options\r\n     * @returns {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"url\",\r\n    value: function (options\r\n    /*:: ?: { forceSecure?: boolean }*/\r\n    )\r\n    /*: ?string*/\r\n    {\r\n      options = options || {};\r\n\r\n      if (!this._url) {\r\n        return;\r\n      }\r\n\r\n      if (options.forceSecure) {\r\n        return this._url.replace(/^http:\\/\\//i, 'https://');\r\n      } else {\r\n        return this._url;\r\n      }\r\n    }\r\n    /**\r\n     * Gets the metadata of the file.\r\n     *\r\n     * @returns {object}\r\n     */\r\n\r\n  }, {\r\n    key: \"metadata\",\r\n    value: function ()\r\n    /*: Object*/\r\n    {\r\n      return this._metadata;\r\n    }\r\n    /**\r\n     * Gets the tags of the file.\r\n     *\r\n     * @returns {object}\r\n     */\r\n\r\n  }, {\r\n    key: \"tags\",\r\n    value: function ()\r\n    /*: Object*/\r\n    {\r\n      return this._tags;\r\n    }\r\n    /**\r\n     * Saves the file to the Parse cloud.\r\n     *\r\n     * @param {object} options\r\n     *  * Valid options are:<ul>\r\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\r\n     *     be used for this request.\r\n     *   <li>sessionToken: A valid session token, used for making a request on\r\n     *     behalf of a specific user.\r\n     *   <li>progress: In Browser only, callback for upload progress. For example:\r\n     * <pre>\r\n     * let parseFile = new Parse.File(name, file);\r\n     * parseFile.save({\r\n     *   progress: (progressValue, loaded, total, { type }) => {\r\n     *     if (type === \"upload\" && progressValue !== null) {\r\n     *       // Update the UI using progressValue\r\n     *     }\r\n     *   }\r\n     * });\r\n     * </pre>\r\n     * </ul>\r\n     * @returns {Promise} Promise that is resolved when the save finishes.\r\n     */\r\n\r\n  }, {\r\n    key: \"save\",\r\n    value: function (options\r\n    /*:: ?: FullOptions*/\r\n    ) {\r\n      var _this2 = this;\r\n\r\n      options = options || {};\r\n\r\n      options.requestTask = function (task) {\r\n        return _this2._requestTask = task;\r\n      };\r\n\r\n      options.metadata = this._metadata;\r\n      options.tags = this._tags;\r\n\r\n      var controller = _CoreManager.default.getFileController();\r\n\r\n      if (!this._previousSave) {\r\n        if (this._source.format === 'file') {\r\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\r\n            _this2._name = res.name;\r\n            _this2._url = res.url;\r\n            _this2._data = null;\r\n            _this2._requestTask = null;\r\n            return _this2;\r\n          });\r\n        } else if (this._source.format === 'uri') {\r\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\r\n            if (!(result && result.base64)) {\r\n              return {};\r\n            }\r\n\r\n            var newSource = {\r\n              format: 'base64',\r\n              base64: result.base64,\r\n              type: result.contentType\r\n            };\r\n            _this2._data = result.base64;\r\n            _this2._requestTask = null;\r\n            return controller.saveBase64(_this2._name, newSource, options);\r\n          }).then(function (res) {\r\n            _this2._name = res.name;\r\n            _this2._url = res.url;\r\n            _this2._requestTask = null;\r\n            return _this2;\r\n          });\r\n        } else {\r\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\r\n            _this2._name = res.name;\r\n            _this2._url = res.url;\r\n            _this2._requestTask = null;\r\n            return _this2;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (this._previousSave) {\r\n        return this._previousSave;\r\n      }\r\n    }\r\n    /**\r\n     * Aborts the request if it has already been sent.\r\n     */\r\n\r\n  }, {\r\n    key: \"cancel\",\r\n    value: function () {\r\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\r\n        this._requestTask.abort();\r\n      }\r\n\r\n      this._requestTask = null;\r\n    }\r\n    /**\r\n     * Deletes the file from the Parse cloud.\r\n     * In Cloud Code and Node only with Master Key.\r\n     *\r\n     * @param {object} options\r\n     *  * Valid options are:<ul>\r\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\r\n     *     be used for this request.\r\n     * <pre>\r\n     * @returns {Promise} Promise that is resolved when the delete finishes.\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function () {\r\n      var _this3 = this;\r\n\r\n      var options\r\n      /*:: ?: FullOptions*/\r\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      if (!this._name) {\r\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\r\n      }\r\n\r\n      var destroyOptions = {\r\n        useMasterKey: true\r\n      };\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        destroyOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getFileController();\r\n\r\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\r\n        _this3._data = null;\r\n        _this3._requestTask = null;\r\n        return _this3;\r\n      });\r\n    }\r\n  }, {\r\n    key: \"toJSON\",\r\n    value: function ()\r\n    /*: { name: ?string, url: ?string }*/\r\n    {\r\n      return {\r\n        __type: 'File',\r\n        name: this._name,\r\n        url: this._url\r\n      };\r\n    }\r\n  }, {\r\n    key: \"equals\",\r\n    value: function (other\r\n    /*: mixed*/\r\n    )\r\n    /*: boolean*/\r\n    {\r\n      if (this === other) {\r\n        return true;\r\n      } // Unsaved Files are never equal, since they will be saved to different URLs\r\n\r\n\r\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\r\n    }\r\n    /**\r\n     * Sets metadata to be saved with file object. Overwrites existing metadata\r\n     *\r\n     * @param {object} metadata Key value pairs to be stored with file object\r\n     */\r\n\r\n  }, {\r\n    key: \"setMetadata\",\r\n    value: function (metadata\r\n    /*: any*/\r\n    ) {\r\n      var _this4 = this;\r\n\r\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\r\n        var _context2;\r\n\r\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\r\n          _this4.addMetadata(key, metadata[key]);\r\n        });\r\n      }\r\n    }\r\n    /**\r\n     * Sets metadata to be saved with file object. Adds to existing metadata.\r\n     *\r\n     * @param {string} key key to store the metadata\r\n     * @param {*} value metadata\r\n     */\r\n\r\n  }, {\r\n    key: \"addMetadata\",\r\n    value: function (key\r\n    /*: string*/\r\n    , value\r\n    /*: any*/\r\n    ) {\r\n      if (typeof key === 'string') {\r\n        this._metadata[key] = value;\r\n      }\r\n    }\r\n    /**\r\n     * Sets tags to be saved with file object. Overwrites existing tags\r\n     *\r\n     * @param {object} tags Key value pairs to be stored with file object\r\n     */\r\n\r\n  }, {\r\n    key: \"setTags\",\r\n    value: function (tags\r\n    /*: any*/\r\n    ) {\r\n      var _this5 = this;\r\n\r\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\r\n        var _context3;\r\n\r\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\r\n          _this5.addTag(key, tags[key]);\r\n        });\r\n      }\r\n    }\r\n    /**\r\n     * Sets tags to be saved with file object. Adds to existing tags.\r\n     *\r\n     * @param {string} key key to store tags\r\n     * @param {*} value tag\r\n     */\r\n\r\n  }, {\r\n    key: \"addTag\",\r\n    value: function (key\r\n    /*: string*/\r\n    , value\r\n    /*: string*/\r\n    ) {\r\n      if (typeof key === 'string') {\r\n        this._tags[key] = value;\r\n      }\r\n    }\r\n  }], [{\r\n    key: \"fromJSON\",\r\n    value: function (obj)\r\n    /*: ParseFile*/\r\n    {\r\n      if (obj.__type !== 'File') {\r\n        throw new TypeError('JSON object does not represent a ParseFile');\r\n      }\r\n\r\n      var file = new ParseFile(obj.name);\r\n      file._url = obj.url;\r\n      return file;\r\n    }\r\n  }, {\r\n    key: \"encodeBase64\",\r\n    value: function (bytes\r\n    /*: Array<number>*/\r\n    )\r\n    /*: string*/\r\n    {\r\n      var chunks = [];\r\n      chunks.length = Math.ceil(bytes.length / 3);\r\n\r\n      for (var i = 0; i < chunks.length; i++) {\r\n        var b1 = bytes[i * 3];\r\n        var b2 = bytes[i * 3 + 1] || 0;\r\n        var b3 = bytes[i * 3 + 2] || 0;\r\n        var has2 = i * 3 + 1 < bytes.length;\r\n        var has3 = i * 3 + 2 < bytes.length;\r\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\r\n      }\r\n\r\n      return chunks.join('');\r\n    }\r\n  }]);\r\n  return ParseFile;\r\n}();\r\n\r\nvar DefaultController = {\r\n  saveFile: function () {\r\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\r\n    /*: string*/\r\n    , source\r\n    /*: FileSource*/\r\n    , options\r\n    /*:: ?: FullOptions*/\r\n    ) {\r\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\r\n\r\n      return _regenerator.default.wrap(function (_context4) {\r\n        while (1) {\r\n          switch (_context4.prev = _context4.next) {\r\n            case 0:\r\n              if (!(source.format !== 'file')) {\r\n                _context4.next = 2;\r\n                break;\r\n              }\r\n\r\n              throw new Error('saveFile can only be used with File-type sources.');\r\n\r\n            case 2:\r\n              _context4.next = 4;\r\n              return new _promise.default(function (res, rej) {\r\n                // eslint-disable-next-line no-undef\r\n                var reader = new FileReader();\r\n\r\n                reader.onload = function () {\r\n                  return res(reader.result);\r\n                };\r\n\r\n                reader.onerror = function (error) {\r\n                  return rej(error);\r\n                };\r\n\r\n                reader.readAsDataURL(source.file);\r\n              });\r\n\r\n            case 4:\r\n              base64Data = _context4.sent; // we only want the data after the comma\r\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\r\n\r\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\r\n              // use the entire string instead\r\n\r\n              data = second ? second : first;\r\n              newSource = {\r\n                format: 'base64',\r\n                base64: data,\r\n                type: source.type || (source.file ? source.file.type : null)\r\n              };\r\n              _context4.next = 10;\r\n              return DefaultController.saveBase64(name, newSource, options);\r\n\r\n            case 10:\r\n              return _context4.abrupt(\"return\", _context4.sent);\r\n\r\n            case 11:\r\n            case \"end\":\r\n              return _context4.stop();\r\n          }\r\n        }\r\n      }, _callee2);\r\n    }));\r\n\r\n    return function () {\r\n      return _saveFile.apply(this, arguments);\r\n    };\r\n  }(),\r\n  saveBase64: function (name\r\n  /*: string*/\r\n  , source\r\n  /*: FileSource*/\r\n  , options\r\n  /*:: ?: FullOptions*/\r\n  ) {\r\n    if (source.format !== 'base64') {\r\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\r\n    }\r\n\r\n    var data\r\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/\r\n    = {\r\n      base64: source.base64,\r\n      fileData: {\r\n        metadata: _objectSpread({}, options.metadata),\r\n        tags: _objectSpread({}, options.tags)\r\n      }\r\n    };\r\n    delete options.metadata;\r\n    delete options.tags;\r\n\r\n    if (source.type) {\r\n      data._ContentType = source.type;\r\n    }\r\n\r\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\r\n  },\r\n  download: function (uri, options) {\r\n    if (XHR) {\r\n      return this.downloadAjax(uri, options);\r\n    } else {\r\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\r\n    }\r\n  },\r\n  downloadAjax: function (uri, options) {\r\n    return new _promise.default(function (resolve, reject) {\r\n      var xhr = new XHR();\r\n      xhr.open('GET', uri, true);\r\n      xhr.responseType = 'arraybuffer';\r\n\r\n      xhr.onerror = function (e) {\r\n        reject(e);\r\n      };\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState !== xhr.DONE) {\r\n          return;\r\n        }\r\n\r\n        if (!this.response) {\r\n          return resolve({});\r\n        }\r\n\r\n        var bytes = new Uint8Array(this.response);\r\n        resolve({\r\n          base64: ParseFile.encodeBase64(bytes),\r\n          contentType: xhr.getResponseHeader('content-type')\r\n        });\r\n      };\r\n\r\n      options.requestTask(xhr);\r\n      xhr.send();\r\n    });\r\n  },\r\n  deleteFile: function (name\r\n  /*: string*/\r\n  , options\r\n  /*:: ?: FullOptions*/\r\n  ) {\r\n    var headers = {\r\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\r\n    };\r\n\r\n    if (options.useMasterKey) {\r\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\r\n    }\r\n\r\n    var url = _CoreManager.default.get('SERVER_URL');\r\n\r\n    if (url[url.length - 1] !== '/') {\r\n      url += '/';\r\n    }\r\n\r\n    url += 'files/' + name;\r\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\r\n      // TODO: return JSON object in server\r\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\r\n        return _promise.default.resolve();\r\n      } else {\r\n        return _CoreManager.default.getRESTController().handleError(response);\r\n      }\r\n    });\r\n  },\r\n  _setXHR: function (xhr\r\n  /*: any*/\r\n  ) {\r\n    XHR = xhr;\r\n  },\r\n  _getXHR: function () {\r\n    return XHR;\r\n  }\r\n};\r\n\r\n_CoreManager.default.setFileController(DefaultController);\r\n\r\nvar _default = ParseFile;\r\nexports.default = _default;\r\nexports.b64Digit = b64Digit;"]},"metadata":{},"sourceType":"script"}