{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) 2015-present, Parse, LLC.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @flow\r\n * @private\r\n */\n\n/* global localStorage */\n\nvar StorageController = {\n  async: 0,\n  getItem: function (path\n  /*: string*/\n  )\n  /*: ?string*/\n  {\n    return localStorage.getItem(path);\n  },\n  setItem: function (path\n  /*: string*/\n  , value\n  /*: string*/\n  ) {\n    try {\n      localStorage.setItem(path, value);\n    } catch (e) {\n      // Quota exceeded, possibly due to Safari Private Browsing mode\n      console.log(e.message);\n    }\n  },\n  removeItem: function (path\n  /*: string*/\n  ) {\n    localStorage.removeItem(path);\n  },\n  getAllKeys: function () {\n    var keys = [];\n\n    for (var i = 0; i < localStorage.length; i += 1) {\n      keys.push(localStorage.key(i));\n    }\n\n    return keys;\n  },\n  clear: function () {\n    localStorage.clear();\n  }\n};\nmodule.exports = StorageController;","map":{"version":3,"sources":["D:/8 Github/baler/node_modules/moralis/lib/browser/StorageController.browser.js"],"names":["StorageController","async","getItem","path","localStorage","setItem","value","e","console","log","message","removeItem","getAllKeys","keys","i","length","push","key","clear","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,CADe;AAEtBC,EAAAA,OAAO,EAAE,UAAUC;AACnB;AADS;AAGT;AACA;AACE,WAAOC,YAAY,CAACF,OAAb,CAAqBC,IAArB,CAAP;AACD,GARqB;AAStBE,EAAAA,OAAO,EAAE,UAAUF;AACnB;AADS,IAEPG;AACF;AAHS,IAIP;AACA,QAAI;AACFF,MAAAA,YAAY,CAACC,OAAb,CAAqBF,IAArB,EAA2BG,KAA3B;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACD;AACF,GApBqB;AAqBtBC,EAAAA,UAAU,EAAE,UAAUR;AACtB;AADY,IAEV;AACAC,IAAAA,YAAY,CAACO,UAAb,CAAwBR,IAAxB;AACD,GAzBqB;AA0BtBS,EAAAA,UAAU,EAAE,YAAY;AACtB,QAAIC,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,YAAY,CAACW,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAC/CD,MAAAA,IAAI,CAACG,IAAL,CAAUZ,YAAY,CAACa,GAAb,CAAiBH,CAAjB,CAAV;AACD;;AAED,WAAOD,IAAP;AACD,GAlCqB;AAmCtBK,EAAAA,KAAK,EAAE,YAAY;AACjBd,IAAAA,YAAY,CAACc,KAAb;AACD;AArCqB,CAAxB;AAuCAC,MAAM,CAACC,OAAP,GAAiBpB,iBAAjB","sourcesContent":["\"use strict\";\r\n/**\r\n * Copyright (c) 2015-present, Parse, LLC.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @flow\r\n * @private\r\n */\r\n\r\n/* global localStorage */\r\n\r\nvar StorageController = {\r\n  async: 0,\r\n  getItem: function (path\r\n  /*: string*/\r\n  )\r\n  /*: ?string*/\r\n  {\r\n    return localStorage.getItem(path);\r\n  },\r\n  setItem: function (path\r\n  /*: string*/\r\n  , value\r\n  /*: string*/\r\n  ) {\r\n    try {\r\n      localStorage.setItem(path, value);\r\n    } catch (e) {\r\n      // Quota exceeded, possibly due to Safari Private Browsing mode\r\n      console.log(e.message);\r\n    }\r\n  },\r\n  removeItem: function (path\r\n  /*: string*/\r\n  ) {\r\n    localStorage.removeItem(path);\r\n  },\r\n  getAllKeys: function () {\r\n    var keys = [];\r\n\r\n    for (var i = 0; i < localStorage.length; i += 1) {\r\n      keys.push(localStorage.key(i));\r\n    }\r\n\r\n    return keys;\r\n  },\r\n  clear: function () {\r\n    localStorage.clear();\r\n  }\r\n};\r\nmodule.exports = StorageController;"]},"metadata":{},"sourceType":"script"}