{"ast":null,"code":"var _jsxFileName = \"/Users/orbiter/Documents/code/baler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react'; //Bootstrap\n\nimport './bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button'; //Components\n\nimport LogButton from './components/logButton';\nimport MinterSpace from './components/minterSpace'; //Helpers\n// Extras\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Moralis = require('moralis');\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null); // Replace this upon deployment:\n\n  const [contractAddress] = useState(\"0xf271dF427d16D3f7910A8b2311E7c2f4702aF8C4\");\n  const [contractInstance] = useState(null); // Moralis confs. \n  // Replace these per server:\n\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'; //Moralis functions\n\n  const currentUser = Moralis.User.current();\n\n  if (currentUser) {\n    if (!user) {\n      setUser(currentUser);\n      fetchUserData(currentUser);\n      connectContract();\n    }\n  } else {\n    console.log('should explain protocol and ask for login');\n  }\n\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\n    alert('Account changed!');\n    setUserData(null);\n  });\n\n  async function login() {\n    let userAuth;\n\n    try {\n      userAuth = await Moralis.Web3.authenticate();\n      setUser(userAuth);\n      alert(\"User logged in\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function logout() {\n    console.log('Login out');\n    Moralis.User.logOut().then(() => {\n      const currentUser = Moralis.User.current(); // this will now be null\n\n      setUser(currentUser);\n      setUserData(null);\n    });\n  } //Backend queries\n\n\n  async function fetchUserData(currentUser) {\n    let usernameRetrieve = await currentUser.get('username');\n    let emailRetrieve = await currentUser.get('email');\n    let ethAddress = await currentUser.get('ethAddress');\n    await setUserData({\n      username: usernameRetrieve,\n      email: emailRetrieve,\n      address: ethAddress\n    });\n  } // Chain connections\n\n\n  async function connectContract() {\n    window.web3 = await Moralis.Web3.enable();\n    contractInstance = new web3.eth.Contract(window.abi, contractAddress);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        height: '70px',\n        padding: '5px 0'\n      },\n      className: \"justify-content-end\",\n      children: [userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '5px'\n        },\n        children: [userData.address.slice(0, 7), \"..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(LogButton, {\n        userData: userData,\n        login: login,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          marginRight: '5px'\n        },\n        children: [userData.username, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            console.log('TODO');\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : null, user && !userData ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log('TODO');\n        },\n        children: \"Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint new NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(MinterSpace, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"r0Lm+Zwnyfi7I5VEWkhvOOpVeJQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/orbiter/Documents/code/baler/src/App.js"],"names":["React","useState","Container","Col","Row","Button","LogButton","MinterSpace","Moralis","require","App","user","setUser","userData","setUserData","contractAddress","contractInstance","initialize","serverURL","currentUser","User","current","fetchUserData","connectContract","console","log","Web3","onAccountsChanged","accounts","alert","login","userAuth","authenticate","error","logout","logOut","then","usernameRetrieve","get","emailRetrieve","ethAddress","username","email","address","window","web3","enable","eth","Contract","abi","height","padding","marginRight","slice","marginLeft"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n//Bootstrap\nimport './bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\n\n//Components\nimport LogButton from './components/logButton';\nimport MinterSpace from './components/minterSpace';\n//Helpers\n\n// Extras\nconst Moralis = require('moralis');\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  // Replace this upon deployment:\n  const [contractAddress]= useState(\"0xf271dF427d16D3f7910A8b2311E7c2f4702aF8C4\");\n  const [contractInstance]=useState(null);\n\n  // Moralis confs. \n  // Replace these per server:\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'\n  \n\n  //Moralis functions\n  const currentUser = Moralis.User.current();\n  if (currentUser) {\n    if(!user){\n      setUser(currentUser);\n      fetchUserData(currentUser);\n      connectContract();\n    }\n  } else {\n    console.log('should explain protocol and ask for login');\n  }\n\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\n    alert('Account changed!')\n    setUserData(null);\n  });\n\n  async function login() {\n    let userAuth;\n      try {\n          userAuth = await Moralis.Web3.authenticate();\n          setUser(userAuth);\n          alert(\"User logged in\")\n      } catch (error) {\n          console.log(error);\n      }\n    }\n  async function logout(){\n      console.log('Login out');\n      Moralis.User.logOut().then(() => {\n        const currentUser = Moralis.User.current();  // this will now be null\n        setUser(currentUser);\n        setUserData(null);\n      });\n    }\n\n  //Backend queries\n  async function fetchUserData(currentUser){\n    let usernameRetrieve = await currentUser.get('username')\n    let emailRetrieve = await currentUser.get('email')\n    let ethAddress = await currentUser.get('ethAddress')\n    await setUserData({username:usernameRetrieve, email:emailRetrieve, address: ethAddress})\n  }\n\n  // Chain connections\n  async function connectContract() {\n    window.web3 = await Moralis.Web3.enable();\n    contractInstance = new web3.eth.Contract(window.abi, contractAddress);\n  }\n\n\n  return (\n    <Container fluid className=\"App\">\n      <Row style={{ height: '70px', padding: '5px 0', }} className=\"justify-content-end\">\n      {/*Login/Logout, address, name, edit user data*/}\n        { userData?\n          <div style={{marginRight: '5px'}}>\n              {userData.address.slice(0,7)}..\n          </div>\n        :null}\n        <LogButton\n          userData={userData}\n          login={login}\n          logout={logout}\n          />\n        { userData?\n            <div style={{marginLeft: '5px',marginRight: '5px'}}>\n                {userData.username}\n                <Button onClick={()=>{console.log('TODO')}}>Edit</Button>\n            </div>\n          :null}\n{/* this will be prompt for new users,(form) to create username, email, etc */}\n        {user && !userData?\n          <Button onClick={()=>{console.log('TODO')}}>Set</Button>\n        :null}\n      </Row>\n      <Row className=\"flex justify-content-center\">\n      {/*title minter*/}\n        <h2>Mint new NFT</h2>\n      </Row>\n      <Row >\n          {/*image handler */}\n        <MinterSpace  user={user} />\n      </Row>\n      <Row>\n      {/*Bale it button*/}\n      </Row>\n      <Row>\n      {/*Collection list and character sheet handler */}\n        <Col>\n          {/*Thumb */}\n        </Col>\n        <Col>\n          {/* Metadata */}\n        </Col>\n        <Col>\n          {/*handlers */}\n        </Col>\n      </Row>\n      <Row>\n      {/*Likes list ..*/}\n      </Row>\n      <Row>\n      {/*Users list */}\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}