{"ast":null,"code":"var _jsxFileName = \"/Users/orbiter/Documents/code/baler/src/components/dragAndDrop.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DragAndDrop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      drag: false\n    };\n    this.dropRef = /*#__PURE__*/React.createRef();\n\n    this.handleDrag = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragIn = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.dragCounter++;\n\n      if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n        this.setState({\n          drag: true\n        });\n      }\n    };\n\n    this.handleDragOut = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.dragCounter--;\n\n      if (this.dragCounter === 0) {\n        this.setState({\n          drag: false\n        });\n      }\n    };\n\n    this.handleDrop = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        drag: false\n      });\n\n      if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n        this.props.handleDrop(e.dataTransfer.files); // e.dataTransfer.clearData()\n\n        this.dragCounter = 0;\n      }\n    };\n  }\n\n  componentDidMount() {\n    let div = this.dropRef.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        position: 'relative'\n      },\n      ref: this.dropRef,\n      children: [this.state.dragging && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: 'dashed grey 4px',\n          backgroundColor: 'rgba(255,255,255,.8)',\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          zIndex: 9999\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '50%',\n            right: 0,\n            left: 0,\n            textAlign: 'center',\n            color: 'grey',\n            fontSize: 36\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"drop here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), this.props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DragAndDrop;","map":{"version":3,"sources":["/Users/orbiter/Documents/code/baler/src/components/dragAndDrop.jsx"],"names":["React","Component","DragAndDrop","state","drag","dropRef","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","props","componentDidMount","div","current","addEventListener","componentWillUnmount","removeEventListener","render","display","position","dragging","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nclass DragAndDrop extends Component {  state = {\n    drag: false\n  }\n  dropRef = React.createRef()\n  handleDrag = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  handleDragIn = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n  handleDragOut = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n    }\n  }\n  handleDrop = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({drag: false})\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files)\n      // e.dataTransfer.clearData()\n      this.dragCounter = 0\n    }\n  }\n  componentDidMount() {\n    let div = this.dropRef.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  render() {\n    return (\n      <div\n        style={{display: 'inline-block', position: 'relative'}}\n        ref={this.dropRef}\n      >\n        {this.state.dragging &&\n          <div\n            style={{\n              border: 'dashed grey 4px',\n              backgroundColor: 'rgba(255,255,255,.8)',\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n              zIndex: 9999\n            }}\n          >\n            <div\n              style={{\n                position: 'absolute',\n                top: '50%',\n                right: 0,\n                left: 0,\n                textAlign: 'center',\n                color: 'grey',\n                fontSize: 36\n              }}\n            >\n              <div>drop here</div>\n            </div>\n          </div>\n        }\n        {this.props.children}\n      </div>\n    )\n  }\n}\nexport default DragAndDrop;\n"]},"metadata":{},"sourceType":"module"}