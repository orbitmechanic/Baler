{"ast":null,"code":"var _jsxFileName = \"/home/drhongo/Documents/hackatons/baler/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react'; //Bootstrap\n\nimport './bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button'; //Components\n\nimport LogButton from './components/logButton';\nimport MinterSpace from './components/minterSpace'; //Helpers\n// Extras\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Moralis = require('moralis');\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [gallery, setGallery] = useState(null);\n  const [nftSelected, setNftSelected] = useState(null); // Moralis confs\n\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'; //Moralis functions\n\n  const currentUser = Moralis.User.current();\n\n  if (currentUser) {\n    if (!user) {\n      setUser(currentUser);\n      fetchUserData(currentUser);\n      getGallery(currentUser.address);\n    }\n  } else {\n    console.log('should explain protocol and ask for login');\n  }\n\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\n    alert('Account changed!');\n    setUserData(null);\n  });\n\n  async function login() {\n    let userAuth;\n\n    try {\n      userAuth = await Moralis.Web3.authenticate();\n      setUser(userAuth);\n      fetchUserData(userAuth);\n      alert(\"User logged in\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function logout() {\n    console.log('Login out');\n    Moralis.User.logOut().then(() => {\n      const currentUser = Moralis.User.current(); // this will now be null\n\n      setUser(currentUser);\n      setUserData(null);\n    });\n  }\n\n  function getProfileForAddress(address) {\n    return address ? Moralis.Cloud.run(\"getProfileForAddress\", {\n      address\n    }) : null;\n  } //Backend queries\n\n\n  async function fetchUserData(currentUser) {\n    let usernameRetrieve = await currentUser.get('username');\n    let emailRetrieve = await currentUser.get('email');\n    let ethAddress = await currentUser.get('ethAddress');\n    await setUserData({\n      username: usernameRetrieve,\n      email: emailRetrieve,\n      address: ethAddress\n    });\n  }\n\n  async function getGallery(address) {\n    // get user profile\n    const targetAddress = address; // console.log('address targeted: ',targetAddress)\n\n    const profile = await getProfileForAddress(targetAddress); // console.log('Profile: ',profile);\n\n    if (profile.pics.length > 0) {\n      setGallery(profile.pics);\n    } else {\n      alert(\"No pics from: \", {\n        address\n      });\n    }\n  }\n\n  async function getMyGallery() {\n    // get user profile\n    getGallery(userData.address);\n  } //App handler functions\n\n\n  function selectNft(pic) {\n    setNftSelected(pic); // setGalleryOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        height: '70px',\n        padding: '5px 0'\n      },\n      className: \"justify-content-end\",\n      children: [userData && userData.address ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '5px'\n        },\n        children: [userData.address.slice(0, 7), \"..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(LogButton, {\n        userData: userData,\n        login: login,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          marginRight: '5px'\n        },\n        children: [userData.username, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            console.log('TODO');\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : null, user && !userData ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log('TODO');\n        },\n        children: \"Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex justify-content-center border\",\n      style: {\n        background: 'lightblue'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mint new NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"flex border\",\n      children: /*#__PURE__*/_jsxDEV(MinterSpace, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'lightgreen'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: gallery ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container center\",\n        id: \"gallery\",\n        children: gallery.map(function (d) {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => {\n              setNftSelected(d);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: d.url,\n              alt: d.name,\n              height: \"200\",\n              width: \"200\",\n              margin: \"5px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"You have no NFTs minted! Do your first!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'grey'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" justify-content-center border\",\n      style: {\n        background: 'coral'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Other users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/ng4C1kfz/u6rVJaqURyX34jq+k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/drhongo/Documents/hackatons/baler/src/App.js"],"names":["React","useState","Container","Col","Row","Button","LogButton","MinterSpace","Moralis","require","App","user","setUser","userData","setUserData","gallery","setGallery","nftSelected","setNftSelected","initialize","serverURL","currentUser","User","current","fetchUserData","getGallery","address","console","log","Web3","onAccountsChanged","accounts","alert","login","userAuth","authenticate","error","logout","logOut","then","getProfileForAddress","Cloud","run","usernameRetrieve","get","emailRetrieve","ethAddress","username","email","targetAddress","profile","pics","length","getMyGallery","selectNft","pic","height","padding","marginRight","slice","marginLeft","background","map","d","url","name"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n//Bootstrap\nimport './bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Button from 'react-bootstrap/Button'\n\n//Components\nimport LogButton from './components/logButton';\nimport MinterSpace from './components/minterSpace';\n//Helpers\n\n// Extras\nconst Moralis = require('moralis');\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [gallery, setGallery] = useState(null);\n  const [nftSelected, setNftSelected] = useState(null);\n\n// Moralis confs\n  Moralis.initialize(\"GsvY24d7vRLDtU5ixRYK10Ry7GscQEJP8mDVzzY3\");\n  Moralis.serverURL = 'https://wvtjjsmhximj.moralis.io:2053/server'\n\n  //Moralis functions\n  const currentUser = Moralis.User.current();\n  if (currentUser) {\n    if(!user){\n      setUser(currentUser);\n      fetchUserData(currentUser);\n      getGallery(currentUser.address)\n    }\n  } else {\n    console.log('should explain protocol and ask for login');\n  }\n\n  Moralis.Web3.onAccountsChanged(async function (accounts) {\n    alert('Account changed!')\n    setUserData(null);\n  });\n\n  async function login() {\n    let userAuth;\n      try {\n          userAuth = await Moralis.Web3.authenticate();\n          setUser(userAuth);\n          fetchUserData(userAuth);\n          alert(\"User logged in\")\n      } catch (error) {\n          console.log(error);\n      }\n    }\n  async function logout(){\n      console.log('Login out');\n      Moralis.User.logOut().then(() => {\n        const currentUser = Moralis.User.current();  // this will now be null\n        setUser(currentUser);\n        setUserData(null);\n      });\n    }\n\n  function getProfileForAddress(address) {\n      return address\n        ? Moralis.Cloud.run(\"getProfileForAddress\", { address })\n        : null;\n    }\n\n//Backend queries\n  async function fetchUserData(currentUser){\n    let usernameRetrieve = await currentUser.get('username')\n    let emailRetrieve = await currentUser.get('email')\n    let ethAddress = await currentUser.get('ethAddress')\n    await setUserData({username:usernameRetrieve, email:emailRetrieve, address: ethAddress})\n  }\n\n\n  async function getGallery(address){\n      // get user profile\n      const targetAddress = address;\n      // console.log('address targeted: ',targetAddress)\n      const profile = await getProfileForAddress(targetAddress);\n      // console.log('Profile: ',profile);\n      if (profile.pics.length > 0) {\n        setGallery(profile.pics)\n      } else {\n        alert(\"No pics from: \",{address});\n      }\n    }\n\n  async function getMyGallery() {\n      // get user profile\n      getGallery(userData.address);\n    }\n\n\n//App handler functions\n  function selectNft(pic){\n    setNftSelected(pic);\n    // setGalleryOpen(false);\n  }\n\n\n\n\n  return (\n    <Container fluid className=\"App\">\n      <Row style={{ height: '70px', padding: '5px 0', }} className=\"justify-content-end\">\n      {/*Login/Logout, address, name, edit user data*/}\n        { userData && userData.address?\n          <div style={{marginRight: '5px'}}>\n              {userData.address.slice(0,7)}..\n          </div>\n        :null}\n        <LogButton\n          userData={userData}\n          login={login}\n          logout={logout}\n          />\n        { userData?\n            <div style={{marginLeft: '5px',marginRight: '5px'}}>\n                {userData.username}\n                <Button onClick={()=>{console.log('TODO')}}>Edit</Button>\n            </div>\n          :null}\n{/* this will be prompt for new users,(form) to create username, email, etc */}\n        {user && !userData?\n          <Button onClick={()=>{console.log('TODO')}}>Set</Button>\n        :null}\n      </Row>\n      <Row className=\"flex justify-content-center border\" style={{background: 'lightblue',}}>\n      {/*title minter*/}\n        <h2>Mint new NFT</h2>\n      </Row>\n      <Row className='flex border'>\n          {/*image handler */}\n        <MinterSpace  user={user} />\n      </Row>\n      <Row className=' justify-content-center border' style={{background: 'lightgreen',}}>\n      {/*Collection list and character sheet handler */}\n        <h3   >Collection</h3>\n      </Row>\n      <Row>\n        { gallery?\n          <div className='container center' id='gallery'>\n            {gallery.map(function(d){\n              return(\n                <a onClick={()=>{setNftSelected(d)}}>\n                  <img src={d.url} alt={d.name} height=\"200\" width=\"200\" margin=\"5px\"></img>\n                </a>\n                )\n                })}\n          </div>\n          :\n          <p className='center'>You have no NFTs minted! Do your first!!</p>\n        }\n        </Row>\n          <Col>\n            {/*Thumb */}\n          </Col>\n          <Col>\n            {/* Metadata */}\n          </Col>\n          <Col>\n            {/*handlers */}\n          </Col>\n        <Row>\n      </Row>\n      <Row className=' justify-content-center border' style={{background: 'grey',}}>\n      {/*Likes list ..*/}\n      <h3 className='center'>Likes</h3>\n      </Row>\n      <Row className=' justify-content-center border' style={{background: 'coral',}}>\n      {/*Users list */}\n      <h3 className='center'>Other users</h3>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}